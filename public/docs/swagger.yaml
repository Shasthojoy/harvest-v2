# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: HarvestAPI
  description: Open Data + Agriculture 
  version: "0.0.0"
# the domain of the service
host: api.rada-harvest.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /docs:
    get:
      summary: Documentation of endpoints in HarvestAPI
      description: |
        Built using Swagger Docs and ReDoc.
      tags:
        - Documentation
      responses:
        200:
          description: swagger generated documentation
          schema:
            type: json
            items:
              $ref: #'#/definitions/docs'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /platform:
    get:
      summary: Platform
      description: |
         This function sends all default application parameters.
      parameters:
        - name: req
          in: query
          description: requests object
          required: true
          type: byte
          format: object
        - name: res
          in: query
          description: response object
          required: true
          type: byte
          format: object
        - name: next
          in: query
          description: next middleware function in the application’s request-response cycle
          required: true
          type: object
          format: function
      tags:
        - Development
      responses:
        200:
          description: description of response goes here
          schema:
            type: array
            items:
              $ref: #'#/definitions/platform'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resources/farmer:
    get:
      summary: Farmer
      description: Retrieves all farmers.
      parameters:
        - name: req
          in: query
          description: requests object
          required: true
          type: byte
          format: object
        - name: res
          in: query
          description: response object
          required: true
          type: byte
          format: object
        - name: next
          in: query
          description: next middleware function in the application’s request-response cycle
          required: true
          type: object
          format: function
      tags:
        - Agriculture
      responses:
        200:
          description: An array of farmers
          schema:
            type: array
            items:
              $ref: #'#/definitions/Farmers'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user:
    get:
      summary: User
      description: Function used to send the user details back the application only after successfully authenticating.  This is intended for logging into the API using the local strategy. ** needs to be more granular re. user functions
      parameters:
        - name: req
          in: query
          description: requests object
          required: true
          type: byte
          format: object
        - name: res
          in: query
          description: response object
          required: true
          type: byte
          format: object
        - name: next
          in: query
          description: next middleware function in the application’s request-response cycle
          required: true
          type: object
          format: function
      tags:
        - Development
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app:
    get:
      summary: app-manager
      description: find, create, get relevant application ojects.
      parameters:
        - name: req
          in: query
          description: requests object
          required: true
          type: byte
          format: object
        - name: res
          in: query
          description: response object
          required: true
          type: byte
          format: object
        - name: next
          in: query
          description: next middleware function in the application’s request-response cycle
          required: true
          type: object
          format: function
      tags:
        - Development
      responses:
        200:
          description: description of response goes here.
          schema:
            $ref: #'#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  PriceEstimate:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string


