# this is documentation represented in YAML for Harvest API
swagger: '2.0'
info:
    title: Harvest API
    version: "0.0.0"
host: localhost
# array of all schemes that your API supports
schemes:
    - https
# will be prefixed to all paths
basePath: /api
tags:
    - name: About HarvestAPI
      description: |
                           ## What is HarvestAPI?
                           The Harvest API is an open data platform for the publishing and sharing of agricultural sector data across government and with the public. It was developed by the SlashRoots Foundation in collaboration with Jamaica’s Rural Agricultural Development Authority’s (RADA) and Ministry of Agriculture (MoA). Through HarvestAPI RADA and the MoA publish and manage the sharing of crop production and farmer and farm registry data from RADA’s ABIS database as well as market price information from the MoA’s JAMIS database.
                           ### What is an API?
                           Simply put, an application programming interface (API) is a set of functions and procedures that allow the creation of applications which access the features or data of an operating system, application, or other service.
                           ### Open Source Project
                           This is an open source project which means the original source code is made freely available and may be redistributed and modified. The source code may be found [here on github](https://github.com/slashroots/harvest-v2)
                           ## ABIS & Relationship with RADA
                           ABIS is a web-based information programme developed by RADA, which provides information on crops, livestock, and agricultural production, markets and stakeholders, to support the business of agriculture.

    - name: What data does the API use?
      description: |
                           Harvest API uses data from ABIS, but only  providing non personal data to developers and the public.
                           ## Data Resources
                           Data resources currently being offered are:
                           - Crops
                           - Farmer
                           - Livestock
                           - Property

                           ### Personal vs Aggregate
                           Aggregate data on a resource is accessed through a respective resource path, which has the resource pluralized. e.g `/api/crops` would return ALL the crops available. As you can imagine, this would return a large amount of data. So, we've allowed you to limit/[throttle](/docs/#throttling-requests) the aggregate requests.
                           Personal requests are those which retrieve a specific record from a resource. e.g. `/api/crop/[CROP_ID_HERE]` would return the specific crop record associated with the crop id passed in the path where `CROP_ID_HERE` is. Please note that for personal requests, the resource name is kept singular.
                           ### Throttling Requests
                           `limit` - This is the number of results that will be returned from this query (defaults to 100).
                           `offset` - This allows for pagination in sets of whatever the limit is (defaults to 0).
    - name: How to use the API
      description: |
                           This documentation provides all the resources offered and how they may be accessed, however, and API key/token must be passed as `access_token` within the header of the request.
                           ## API Registration
                           You MUST register on ther [Harvest API website]() before interfacing with the API for any development.
                           ## API Keys
                           An application programming interface key (API key) is a code passed in by computer programs calling an application programming interface (API) to identify the calling program, its developer, or its user to the Web site. Ths is done to ensure we know how the information being provided is being accessed. Remember, the api key MUST be passedin the header of the requested through the variable `access_token`.

    - name: Crop
      description: Crop information
    - name: Farmer
      description: Farmer information
    - name: Livestock
      description: Livestock information
    - name: Property
      description: Property information
paths:
    /crops:
        get:
            summary: Get All Crops
            description: |
                Retrieve information on all crops
            operationId: getAllCrops
            tags:
                - Crop
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Crop'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                    #- write_pets
                    #- read_pets
            parameters:
                - name: limit
                  in: query
                  description: This is the number of results that will be returned from this query (defaults to 100).
                  required: false
                  type: number
                  default: 100
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Crop'
                - name: offset
                  in: query
                  description: This allows for pagination in sets of whatever the limit is (defaults to 0).
                  required: false
                  type: number
                  default: 0
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Crop'
                - name: field
                  in: query
                  description: This allows for filtering results accordingly - for example you could get all the properties in the parish of Portland.
                  required: false
                  type: string
    /crop/{id}:
        get:
            summary: Get Crop By ID
            description: |
                Retrieve information on a crop, provided an ID
            operationId: getCropByID
            tags:
                - Crop
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Crop'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                     #- write_pets
                     #- read_pets
    /farmers:
        get:
            summary: Get All Farmers
            description: |
                Retrieve information on all farmers
            operationId: getAllFarmers
            tags:
                - Farmer
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Farmer'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                     #- write_pets
                     #- read_pets
            parameters:
                - name: limit
                  in: query
                  description: This is the number of results that will be returned from this query (defaults to 100).
                  required: false
                  type: number
                  default: 100
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Farmer'
                - name: offset
                  in: query
                  description: This allows for pagination in sets of whatever the limit is (defaults to 0).
                  required: false
                  type: number
                  default: 0
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Farmer'
                - name: field
                  in: query
                  description: This allows for filtering results accordingly - for example you could get all the properties in the parish of Portland.
                  required: false
                  type: string
    /farmer/{id}:
        get:
            summary: Get Farmer By ID
            description: |
                Retrieve information on a Farmer, provided an ID
            operationId: getFarmerByID
            tags:
                - Farmer
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Farmer'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                    #- write_pets
                    #- read_pets
    /livestock:
        get:
            summary: Get All Livestock
            description: |
                Retrieve information on all livestock
            operationId: getAllLivestock
            tags:
                - Livestock
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                      type: array
                      items:
                          $ref: '#/definitions/Livestock'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                    #- write_pets
                    #- read_pets
            parameters:
                - name: limit
                  in: query
                  description: This is the number of results that will be returned from this query (defaults to 100).
                  required: false
                  type: number
                  default: 100
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Livestock'
                - name: offset
                  in: query
                  description: This allows for pagination in sets of whatever the limit is (defaults to 0).
                  required: false
                  type: number
                  default: 0
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Livestock'
                - name: field
                  in: query
                  description: This allows for filtering results accordingly - for example you could get all the properties in the parish of Portland.
                  required: false
                  type: string
    /livestock/{id}:
        get:
            summary: Get Livestock By ID
            description: |
                Retrieve information on a livestock, provided an ID
            operationId: getLivestockByID
            tags:
                - Livestock
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: requests object
                  type: string
                  required: true
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Livestock'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                    #- write_pets
                    #- read_pets
    /properties:
        get:
            summary: Get All Property
            description: |
                Retrieve information on all properties
            operationId: getAllProperties
            tags:
                - Property
            produces:
                - application/json
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Property'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                    #- write_pets
                    #- read_pets
            parameters:
                - name: limit
                  in: query
                  description: This is the number of results that will be returned from this query (defaults to 100).
                  required: false
                  type: number
                  default: 100
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Property'
                - name: offset
                  in: query
                  description: This allows for pagination in sets of whatever the limit is (defaults to 0).
                  required: false
                  type: number
                  default: 0
                  schema:
                      type: array
                      items:
                          $ref: '#/definitions/Property'
                - name: field
                  in: query
                  description: This allows for filtering results accordingly - for example you could get all the properties in the parish of Portland.
                  required: false
                  type: string
    /property/{id}:
        get:
            summary: Get Property By ID
            description: |
                Retrieve information on a property, provided an ID
            operationId: getPropertyByID
            tags:
                - Property
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: requests object
                  type: string
                  required: true
            responses:
                200:
                    description: Successful
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Property'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error
            security:
                - api_key: []
                #- petstore_auth:
                  #- write_pets
                  #- read_pets

securityDefinitions:             #ASK NICK HOW WE'D ACCESS/PASS API KEY AND AUTH TOKEN
    api_key:
        type: apiKey
        name: access_token
        in: header
    #petstore_auth:
        #type: oauth2
        #authorizationUrl: harvest-api-staging.herokuapp.com/api
        #flow: implicit
        #scopes:      #ASK NICK WHAT SCOPES WE ARE USING
            #write_pets: modify pets in your account
            #read_pets: read your pets
definitions:
    Crop:
        type: object
        properties:
            IDX_Property:
                type: number
                description: to be updated
                example: 1971349
            Crop_Variety:
                type: string
                description: to be updated
                example: "Not Stated"
            Crop_Name:
                type: string
                description: The name of a crop
                example: "Ackee"
            Crop_Total_Area:
                type: number
                description: The total area of land the crop is grown on
                example: 0.61
            Crop_Count:
                type: number
                description: The Amount of crop produced
                example: 0
            Plant_Date:
                type: string
                description: They day the crop was planted
                example: "2004-08-11T00:00:00.000Z"
            Major_Market_Percentage:
                type: number
                description: to be updated
                example: 0
            Minor_Market_Percentage:
                type: number
                description: to be updated
                example: 0
            Crop_Remarks:
                type: string
                description: Remarks and comments about the crop
                example: ""
            Create_Date:
                type: string
                description: The date this entry was created
                example: "2008-11-04T12:44:55.846Z"
            Update_Date:
                type: string
                description: The date this entry was updated
                example: "2008-11-04T12:44:55.846Z"
            Code_Area_Unit:
                type: string
                description: The unit of measure for the crop's area (ha)
                example: "Hectare"
            Major_Market:
                type: string
                description: to be updated
                example: n/a
            Minor_Market:
                type: string
                description: to be updated
                example: n/a
            IDX_StakeHolder:
                type: number
                description: to be updated
                example: 952790
            Property_Address:
                type: string
                description: to be updated
                example: The address of the property the crop is grown on
            District:
                type: string
                description: The district of the address
                example: "INVERNESS"
            Parish:
                type: string
                description: The parish the district is in
                example: "ST.ANN"
            Parish_Extension_Name:
                type: string
                description: The extension the parish belongs.
                example: "ALEXANDRIA"
            Crop_Variety_IDX:
                type: number
                description: to be updated
                example: 87
            Crop_Total_Area_Ha:
                type: number
                description: to be updated
                example: 0.61
    Farmer:
        type: object
        properties:
            IDX_StakeHolder:
                type: array
                description: to be updated
                example: [952520,952520]
            StakeHolder_Num:
                type: string
                description: to be updated
                example: '081117655'
            Company_Name:
                type: string
                description: The legal name the farmer's farm is registered under.
                example: n/a
            First_Name:
                type: string
                description: Farmer's first name
                example: 'ERROL'
            Middle_Name:
                type: string
                description: Famrer's middle name
                example: 'CHARLES'
            Last_Name:
                type: string
                description: Farmer's surname
                example: 'LENNOX'
            Alias:
                type: string
                description: Farmer's nickname
                example: n/a
            DOB:
                type: string
                description: Farmer's date of birth
                example: '1975-11-30T00:00:00.000Z'
            Gender:
                type: number
                description: male or female
                example: 1
            Jas_Receipt:
                type: string
                description: to be updated
                example: '0'
            Res_Street_Address:
                type: string
                description: Street address of the farmer
                example: 'MERTON PEN'
            Res_District_Name:
                type: string
                description: District of the farmer's address
                example: 'GRANGE HILL'
            Res_Post_Office:
                type: string
                description: The post office, if any, which the farmer'd box is located
                example: 'Grange Hill P.A.'
            Res_Parish:
                type: string
                description: The parish the farmer resides
                example: 'St. Catherine'
            Res_Tele_Num:
                type: string
                description: Farmer's landline they may be contacted by
                example: '457-8027'
            Bus_Street_Address:
                type: string
                description: The corporate address of the farmer (typically the farm's address)
                example: n/a
            Bus_District_Name:
                type: string
                description: The district of the corporate address
                example: 'GRANGE HILL'
            Bus_Post_Office:
                type: string
                description:  The post office of the corporate address
                example: n/a
            Bus_Parish:
                type: string
                description:  The parish the farmer operates
                example: St. Catherine
            Bus_Tele_Num:
                type: number
                description: Corporate contact number
                example: 0
            Cell_Num:
                description: Mobile number
                type: string
                example: n/a
            Email_Address:
                type: string
                description: email address of the farmer
                example:
            Fax_Num:
                type: string
                description: Fax number
                example: n/a
            Identification_Num:
                type: string
                description: Farmer's registered identification number
                example: '106699920'
            TRN:
                type: string
                description: Farmer's TRN
                example: '106699920'
            Interviewer:
                type: string
                description: to be updated
                example: n/a
            Verified_Date:
                type: string
                description: to be updated
                example: '2009-01-09T00:00:00.000Z'
            Registration_Date:
                type: string
                description: The parish the farmer operates
                example: '2008-10-17T00:00:00.000Z'
            Have_Photo_YN:
                type: string
                description: Whether or not the farmer has a photo
                example: yes
            Want_Photo_YN:
                type: string
                description: Whether or not the farmer wants a photo
                example: no
            Photo_Path:
                type: string
                description: file path to farmer's photo
                example: '081117655.jpg'
            Photo_Found_YN:
                type: string
                description: Whether or not the farmer's photo has been found
                example: n/a
            IDX_EOJ_Photo_Batch:
                type: string
                description: to be updated
                example: n/a
            Old_Photo_Path:
                type: string
                description: to be updated
                example: n/a
            Old_Have_Photo_YN:
                type: string
                description: to be updated
                example: n/a
            Create_Date:
                type: array
                description: The date this entry was submitted
                example: ['2008-11-03T08:50:30.900Z','2008-11-03T08:51:59.590Z']
            Update_Date:
                type: array
                description: to be updated
                example: ['2009-01-09T00:00:00.000Z','2008-11-03T08:51:59.590Z']
            ReVerified_Date:
                type: string
                description: to be updated
                example: n/a
            Stakeholder_Status_Date:
                type: string
                description: to be updated
                example: n/a
            primary_parish:
                type: number
                description: to be updated
                example: 4
            primary_district:
                type: number
                description: to be updated
                example: 994
            IDX_Farmer_Profile:
                type: number
                description: to be updated
                example: 523402
            Live_On_Farm_YN:
                type: number
                description: to be updated
                example: 1
            Agri_Training_YN:
                type: number
                description: to be updated
                example: 2
            Holding_Start:
                type: string
                description: to be updated
                example: '1994'
            Nearest_Police_Station:
                type: string
                description: to be updated
                example: 'Manchioneal'
            Farmer_Profile_Remarks:
                type: string
                description: to be updated
                example: n/a
            Jas_Farmer_Group:
                type: string
                description: to be updated
                example:
    Livestock:
        type: object
        properties:
            IDX_Livestock:
                type: number
                description: to be updated
                example: 340798
            IDX_Property:
                type: number
                description: to be updated
                example: 1971353
            Livestock_Count:
                type: number
                description: Amount of livestock being reared
                example: 14
            Livestock_Capacity:
                type: number
                description: to be updated
                example: 20
            Livestock_Remarks:
                type: string
                description: Remarks and comments about livestock
                example: ""
            Major_Market_Percentage:
                type: number
                description: to be updated
                example: 0
            Minor_Market_Percentage:
                type: number
                description: to be updated
                example: 0
            Create_Date:
                type: string
                description: The date this entry was created
                example: "2008-11-04T13:12:32.990Z"
            Update_Date:
                type: string
                description: The date this entry was updated
                example: "2008-11-04T13:12:32.990Z"
            Livestock_Name:
                type: string
                description: Name of Livestock
                example: "Pig"
            Major_Market:
                type: string
                description: to be updated
                example: "Hotel"
            Minor_Market:
                type: string
                description: to be updated
                example: "Householder"
            District:
                type: string
                description: District the livestock is being reared
                example: "INVERNESS"
            Parish_Extension_Name:
                type: string
                description: Extension the parish belongs to
                example: "ALEXANDRIA"
            Parish:
                type: string
                description: Parish the district is located in
                example: "ST.ANN"
            Property_Address:
                type: string
                description: Property address on which the lovestock is being reared
                example: "inverness inverness p.o. st. ann"
            IDX_StakeHolder:
                type: number
                description: to be updated
                example: 952798
            Livestock_Stage:
                type: string
                description: to be updated
                example: "Not Stated"
    Property:
        type: object
        properties:
            IDX_Property:
                type: number
                description: to be updated
                example: 1971350
            IDX_StakeHolder:
                type: number
                description: to be updated
                example: 952792
            District:
                type: string
                description: The district the property is located
                example: 'GREENLAND'
            Parish:
                type: string
                description: The parish that district is located in
                example: 'MANCHESTER'
            Parish_Extension_Name:
                type: string
                description: The extension which the parish belongs
                example: 'MILE GULLY'
            Extension_Officer:
                type: string
                description: Exntension officer for the parish
                example: '47'
            Property_Address:
                type: string
                description: The address of the property
                example: 'Greenland'
            Property_Size:
                type: number
                description: The size of the property
                example: 1.62
            Property_Usage:
                type: number
                description:  The intended use of the property
                example: 0.01
            Property_Remarks:
                type: string
                description: Remarks or comments about the property
                example: ''
            Volume_Num:
                type: string
                description: volume of production
                example: ''
            Folio_Num:
                type: string
                description: to be updated
                example: ''
            Distance_From_Road:
                type: number
                description: The distance of the property from a main road.
                example: 0
            Primary_Property_YN:
                type: number
                description: Whether or not this is the primary property of production
                example: 2
            Latitude:
                type: number
                description: Latitudinal location of property
                example: 0
            Longitude:
                type: number
                description: Longitudinal location of the property
                example: 0
            Create_Date:
                type: string
                description: The date this entry was created
                example: '2008-11-04T12:46:47.926Z'
            Update_Date:
                type: string
                description: The date this entry was updated
                example: '2008-11-04T12:46:47.926Z'
            Description:
                type: string
                description: Description of property
                example: 'Leased'
            Property_Status:
                type: string
                description: to be updated
                example: 'Active'
            Ownership:
                type: string
                description: to be updated
                example: n/a
            Distance_Units:
                type: number
                description: to be updated
                example: 0
            Property_Usage_Units:
                type: string
                description: Units of measurement for the Distance_From_Road
                example: 'Hectare'
            Property_Size_Units:
                type: string
                description: The units of measurement for the property size (ha)
                example: 'Hectare'
            Property_Size_Ha:
                type: number
                description: to be updated
                example: 1.62
            Irrigation_Source:
                type: string
                description: to be updated
                example: n/a
            irrigation_access_yn:
                type: string
                description: to be updated
                example: n/a
